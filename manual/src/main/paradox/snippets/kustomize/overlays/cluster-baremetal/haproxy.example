# here we use different ports to access either leader or workers. 
# You can also configure HAProxy to use SNI to route to the right instance using the same input port 
# (https://www.haproxy.com/fr/blog/enhanced-ssl-load-balancing-with-server-name-indication-sni-tls-extension/)

frontend front_worker_nodes_http
    bind *:80
    mode tcp
    default_backend worker_http_nodes
    timeout client          1m

frontend front_worker_nodes_https
    bind *:443
    mode tcp
    default_backend worker_https_nodes
    timeout client          1m

frontend front_leader_nodes_http
    bind *:81
    mode tcp
    default_backend leader_http_nodes
    timeout client          1m

frontend front_leader_nodes_https
    bind *:444
    mode tcp
    default_backend leader_https_nodes
    timeout client          1m

backend worker_http_nodes
    mode tcp
    balance roundrobin
    server kubernetes-node1 10.2.2.40:32080
    server kubernetes-node2 10.2.2.41:32080
    server kubernetes-node3 10.2.2.42:32080
    timeout connect        10s
    timeout server          1m

backend worker_https_nodes
    mode tcp
    balance roundrobin
    server kubernetes-node1 10.2.2.40:32443
    server kubernetes-node2 10.2.2.41:32443
    server kubernetes-node3 10.2.2.42:32443
    timeout connect        10s
    timeout server          1m

backend leader_http_nodes
    mode tcp
    balance roundrobin
    server kubernetes-node1 10.2.2.40:31080
    server kubernetes-node2 10.2.2.41:31080
    server kubernetes-node3 10.2.2.42:31080
    timeout connect        10s
    timeout server          1m

backend leader_https_nodes
    mode tcp
    balance roundrobin
    server kubernetes-node1 10.2.2.40:31443
    server kubernetes-node2 10.2.2.41:31443
    server kubernetes-node3 10.2.2.42:31443
    timeout connect        10s
    timeout server          1m