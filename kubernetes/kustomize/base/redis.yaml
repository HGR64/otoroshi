apiVersion: v1
kind: Service
metadata:
  name: redis-leader-service
spec:
  ports:
    - port: 6379
      name: redis
  selector:
    run: redis-leader-deployment
---
apiVersion: v1
kind: Service
metadata:
  name: redis-follower-service
spec:
  ports:
    - port: 6379
      name: redis
  selector:
    run: redis-follower-deployment
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-leader-deployment
spec:
  selector:
    matchLabels:
      run: redis-leader-deployment
  serviceName: redis-leader-service
  replicas: 1
  template:
    metadata:
      labels:
        run: redis-leader-deployment
    spec:
      containers:
        - name: redis-leader-container
          image: redis
          imagePullPolicy: Always
          command: ["redis-server", "--appendonly", "yes"]
          ports:
            - containerPort: 6379
              name: redis
          volumeMounts:
          - name: redis-leader-storage
            mountPath: /data
            readOnly: false
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - "redis-cli -h $(hostname) ping"
            initialDelaySeconds: 15
            timeoutSeconds: 5
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - "redis-cli -h $(hostname) ping"
            initialDelaySeconds: 20
            periodSeconds: 3
  volumeClaimTemplates:
  - metadata:
      name: redis-leader-storage
      labels:
        name: redis-leader-storage
      annotations:
        volume.alpha.kubernetes.io/storage-class: anything
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Mi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-follower-deployment
spec:
  selector:
    matchLabels:
      run: redis-follower-deployment
  serviceName: redis-follower-service
  replicas: 1
  template:
    metadata:
      labels:
        run: redis-follower-deployment
    spec:
      containers:
        - name: redis-follower-container
          image: redis
          imagePullPolicy: Always
          command: ["redis-server", "--appendonly", "yes", "--slaveof", "redis-leader-service", "6379"]
          ports:
            - containerPort: 6379
              name: redis
          volumeMounts:
          - name: redis-follower-storage
            mountPath: /data
            readOnly: false
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - "redis-cli -h $(hostname) ping"
            initialDelaySeconds: 15
            timeoutSeconds: 5
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - "redis-cli -h $(hostname) ping"
            initialDelaySeconds: 20
            periodSeconds: 3
  volumeClaimTemplates:
  - metadata:
      name: redis-follower-storage
      labels:
        name: redis-follower-storage
      annotations:
        volume.alpha.kubernetes.io/storage-class: anything
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Mi