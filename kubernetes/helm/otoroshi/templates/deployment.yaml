apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
  labels:
    app.kubernetes.io/name: {{ template "otoroshi.name" . }}
    helm.sh/chart: {{ template "otoroshi.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  annotations:
  {{- with .Values.deployment.annotations }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "otoroshi.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: {{ .Values.replicas }}
  strategy:
  {{- with .Values.strategy }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "otoroshi.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      hostNetwork: false
      containers:
      - image: {{ .Values.image.name }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: {{ .Values.name }}
        ports:
          - containerPort: {{ .Values.image.http }}
            name: "http"
            protocol: TCP
          - containerPort: {{ .Values.image.https }}
            name: "https"
            protocol: TCP
        env:
          - name: APP_STORAGE_ROOT
            value: {{ .Values.env.storageRoot }}
          - name: OTOROSHI_INITIAL_ADMIN_PASSWORD
            value: {{ .Values.env.password }}
          - name: APP_DOMAIN
            value: {{ .Values.env.domain }}
          - name: APP_STORAGE
            value: lettuce
          - name: REDIS_URL
            value: {{ .Values.env.redisURL }}
          - name: ADMIN_API_CLIENT_ID
            value: {{ .Values.env.clientId }}
          - name: ADMIN_API_CLIENT_SECRET
            value: {{ .Values.env.clientSecret }}
          - name: ADMIN_API_ADDITIONAL_EXPOSED_DOMAIN
            value: otoroshi-api-service.{{ .Release.Namespace }}.svc.cluster.local
          - name: OTOROSHI_SECRET
            value: {{ .Values.env.secret }}
          - name: OTOROSHI_INITIAL_CUSTOMIZATION
            value: >
              {\"config\":{\"scripts\":{\"enabled\":true,\"jobRefs\":[\"cp:otoroshi.plugins.jobs.kubernetes.KubernetesIngressControllerJob\",\"cp:otoroshi.plugins.jobs.kubernetes.KubernetesOtoroshiCRDsControllerJob\"],\"jobConfig\":{\"KubernetesConfig\":{\"trust\":false,\"namespaces\":[\"*\"],\"labels\":[],\"ingressClasses\":[\"otoroshi\"],\"defaultGroup\":\"default\",\"ingresses\":true,\"crds\":true,\"kubeLeader\":false,\"restartDependantDeployments\":false,"coreDnsIntegration":true, "otoroshiNamespace":"{{ .Release.Namespace }}","otoroshiServiceName":"{{ .Values.service.name }}",\"templates\":{\"service-group\":{},\"service-descriptor\":{},\"apikeys\":{},\"global-config\":{},\"jwt-verifier\":{},\"tcp-service\":{},\"certificate\":{},\"auth-module\":{},\"script\":{}}}}}}}
        readinessProbe:
          httpGet:
            path: /ready
            port: {{ .Values.image.http }}
          {{- with .Values.probes.readiness }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        livenessProbe:
          httpGet:
            path: /live
            port: {{ .Values.image.http }}
          {{- with .Values.probes.liveness }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        resources:
          {{- with .Values.resources }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.service.name }}
spec:
  selector:
    app.kubernetes.io/name: {{ template "otoroshi.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  ports:
  - port: {{ .Values.service.http }}
    name: "http"
    targetPort: "http"
  - port: {{ .Values.service.https }}
    name: "https"
    targetPort: "https"
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.service.apiName }}
spec:
  selector:
    app.kubernetes.io/name: {{ template "otoroshi.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  ports:
  - port: {{ .Values.service.http }}
    name: "http"
    targetPort: "http"
  - port: {{ .Values.service.https }}
    name: "https"
    targetPort: "https"
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.loadbalancer.name }}
spec:
  {{- if .Values.loadbalancer.enabled }}
  type: LoadBalancer
  {{- end }}
  {{- if not .Values.loadbalancer.enabled }}
  type: ClusterIP
  {{- end }}
  selector:
    app.kubernetes.io/name: {{ template "otoroshi.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  ports:
  - port: {{ .Values.loadbalancer.http }}
    name: "http"
    targetPort: "http"
    {{- if not .Values.loadbalancer.enabled }}
    nodePort: {{ .Values.loadbalancer.nodePort.http }}
    {{- end }}
  - port: {{ .Values.loadbalancer.https }}
    name: "https"
    targetPort: "https"
    {{- if not .Values.loadbalancer.enabled }}
    nodePort: {{ .Values.loadbalancer.nodePort.https }}
    {{- end }}