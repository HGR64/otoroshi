http.port = 8080
http.port = ${?PORT}

play.crypto.secret = "secret"
play.crypto.secret = ${?PLAY_CRYPTO_SECRET}

play.modules {
}

play.application.loader = "OtoroshiLoader"

play.http {
  session {
    secure = false
    secure = ${?SESSION_SECURE_ONLY}
    httpOnly = true
    maxAge = 259200000
    maxAge = ${?SESSION_MAX_AGE}
    domain = "."${app.domain}
    domain = ${?SESSION_DOMAIN}
    cookieName = "otoroshi-session"
    cookieName = ${?SESSION_NAME}
  }
}

# play.filters {
#   headers {
#     frameOptions = "DENY"
#     xssProtection = "1; mode=block"
#     contentTypeOptions = "nosniff"
#     permittedCrossDomainPolicies = "master-only"
#     # contentSecurityPolicy = "default-src 'self'"
#     contentSecurityPolicy = null
#   }
#   gzip {
#     # The buffer size to use for gzipped bytes
#     bufferSize = 8k
#     # The maximum amount of content to buffer for gzipping in order to calculate the content length before falling back
#     # to chunked encoding.
#     chunkedThreshold = 100k
#   }
# }

play.server.netty {
  transport = "jdk"
  transport = ${?NETTY_TRANSPORT}
  eventLoopThreads = 32
  maxChunkSize = 16384
  option {
    # SO_BACKLOG = 100
    child {
      SO_KEEPALIVE = true
      # TCP_NODELAY = false
    }
  }
}

play.ws {
  play.ws.useragent="Otoroshi"
  play.ws.useragent=${?USER_AGENT}
  # Sets HTTP requests not to follow 302 requests
  #followRedirects = false

  # Sets the maximum number of open HTTP connections for the client.
  #ahc.maxConnectionsTotal = 50

  ## WS SSL
  # https://www.playframework.com/documentation/latest/WsSSL
  # ~~~~~
  ssl {
    # Configuring HTTPS with Play WS does not require programming.  You can
    # set up both trustManager and keyManager for mutual authentication, and
    # turn on JSSE debugging in development with a reload.
    #debug.handshake = true
    #trustManager = {
    #  stores = [
    #    { type = "JKS", path = "exampletrust.jks" }
    #  ]
    #}
  }
}

play.cache {
  # If you want to bind several caches, you can bind the individually
  #bindCaches = ["db-cache", "user-cache", "session-cache"]
}

akka {
  jvm-exit-on-fatal-error = off
}

play.akka {
  jvm-exit-on-fatal-error = off
}

akka {
  jvm-exit-on-fatal-error = false
  default-dispatcher {
    type = Dispatcher
    executor = "fork-join-executor"
    fork-join-executor {
      parallelism-factor = 4.0
      parallelism-min = 4
      parallelism-max = 64
      task-peeking-mode = "FIFO"
    }
    throughput = 1
  }
}