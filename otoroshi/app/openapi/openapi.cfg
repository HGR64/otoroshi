{
  "banned": [ "otoroshi.controllers.BackOfficeController$SearchedService", "otoroshi.models.EntityLocationSupport", "otoroshi.auth.AuthModuleConfig", "otoroshi.auth.OAuth2ModuleConfig", "otoroshi.ssl.ClientCertificateValidator" ],
  "descriptions": {
    "operations.otoroshi.controllers.PrivateAppsController.registerSession_privateapps": "???",
    "operations.otoroshi.controllers.PrivateAppsController.sendSelfUpdateLink_privateapps": "???",
    "operations.otoroshi.controllers.adminapi.AnalyticsController.filterableEvents_analytics": "???",
    "operations.otoroshi.controllers.adminapi.AnalyticsController.filterableStats_analytics": "???",
    "operations.otoroshi.controllers.adminapi.AnalyticsController.globalStats_analytics": "???",
    "operations.otoroshi.controllers.adminapi.AnalyticsController.globalStatus_analytics": "???",
    "operations.otoroshi.controllers.adminapi.AnalyticsController.groupStatus_groups": "???",
    "operations.otoroshi.controllers.adminapi.AnalyticsController.serviceEvents_services": "???",
    "operations.otoroshi.controllers.adminapi.AnalyticsController.serviceResponseTime_services": "???",
    "operations.otoroshi.controllers.adminapi.AnalyticsController.serviceStats_services": "???",
    "operations.otoroshi.controllers.adminapi.AnalyticsController.serviceStatus_services": "???",
    "operations.otoroshi.controllers.adminapi.AnalyticsController.servicesStatus_analytics": "???",
    "operations.otoroshi.controllers.adminapi.ApiKeysController.apiKeyQuotas_apikeys": "???",
    "operations.otoroshi.controllers.adminapi.ApiKeysController.bulkCreateAction_apikeys": "???",
    "operations.otoroshi.controllers.adminapi.ApiKeysController.bulkDeleteAction_apikeys": "???",
    "operations.otoroshi.controllers.adminapi.ApiKeysController.bulkPatchAction_apikeys": "???",
    "operations.otoroshi.controllers.adminapi.ApiKeysController.bulkUpdateAction_apikeys": "???",
    "operations.otoroshi.controllers.adminapi.ApiKeysController.createAction_apikeys": "???",
    "operations.otoroshi.controllers.adminapi.ApiKeysController.deleteEntityAction_apikeys": "???",
    "operations.otoroshi.controllers.adminapi.ApiKeysController.findAllEntitiesAction_apikeys": "???",
    "operations.otoroshi.controllers.adminapi.ApiKeysController.findEntityByIdAction_apikeys": "???",
    "operations.otoroshi.controllers.adminapi.ApiKeysController.patchEntityAction_apikeys": "???",
    "operations.otoroshi.controllers.adminapi.ApiKeysController.resetApiKeyQuotas_apikeys": "???",
    "operations.otoroshi.controllers.adminapi.ApiKeysController.updateEntityAction_apikeys": "???",
    "operations.otoroshi.controllers.adminapi.ApiKeysFromGroupController.apiKeyFromGroupQuotas_groups": "???",
    "operations.otoroshi.controllers.adminapi.ApiKeysFromGroupController.apiKeyFromGroup_groups": "???",
    "operations.otoroshi.controllers.adminapi.ApiKeysFromGroupController.apiKeysFromGroup_groups": "???",
    "operations.otoroshi.controllers.adminapi.ApiKeysFromGroupController.createApiKeyFromGroup_groups": "???",
    "operations.otoroshi.controllers.adminapi.ApiKeysFromGroupController.deleteApiKeyFromGroup_groups": "???",
    "operations.otoroshi.controllers.adminapi.ApiKeysFromGroupController.patchApiKeyFromGroup_groups": "???",
    "operations.otoroshi.controllers.adminapi.ApiKeysFromGroupController.resetApiKeyFromGroupQuotas_groups": "???",
    "operations.otoroshi.controllers.adminapi.ApiKeysFromGroupController.updateApiKeyFromGroup_groups": "???",
    "operations.otoroshi.controllers.adminapi.ApiKeysFromServiceController.apiKeyQuotas_services": "???",
    "operations.otoroshi.controllers.adminapi.ApiKeysFromServiceController.apiKey_services": "???",
    "operations.otoroshi.controllers.adminapi.ApiKeysFromServiceController.apiKeys_services": "???",
    "operations.otoroshi.controllers.adminapi.ApiKeysFromServiceController.createApiKey_services": "???",
    "operations.otoroshi.controllers.adminapi.ApiKeysFromServiceController.deleteApiKey_services": "???",
    "operations.otoroshi.controllers.adminapi.ApiKeysFromServiceController.patchApiKey_services": "???",
    "operations.otoroshi.controllers.adminapi.ApiKeysFromServiceController.resetApiKeyQuotas_services": "???",
    "operations.otoroshi.controllers.adminapi.ApiKeysFromServiceController.updateApiKey_services": "???",
    "operations.otoroshi.controllers.adminapi.AuthModulesController.bulkCreateAction_auth-modules": "???",
    "operations.otoroshi.controllers.adminapi.AuthModulesController.bulkDeleteAction_auth-modules": "???",
    "operations.otoroshi.controllers.adminapi.AuthModulesController.bulkPatchAction_auth-modules": "???",
    "operations.otoroshi.controllers.adminapi.AuthModulesController.bulkUpdateAction_auth-modules": "???",
    "operations.otoroshi.controllers.adminapi.AuthModulesController.createAction_auth-modules": "???",
    "operations.otoroshi.controllers.adminapi.AuthModulesController.deleteEntityAction_auth-modules": "???",
    "operations.otoroshi.controllers.adminapi.AuthModulesController.findAllEntitiesAction_auth-modules": "???",
    "operations.otoroshi.controllers.adminapi.AuthModulesController.findEntityByIdAction_auth-modules": "???",
    "operations.otoroshi.controllers.adminapi.AuthModulesController.finishRegistration_auth-modules": "???",
    "operations.otoroshi.controllers.adminapi.AuthModulesController.patchEntityAction_auth-modules": "???",
    "operations.otoroshi.controllers.adminapi.AuthModulesController.startRegistration_auth-modules": "???",
    "operations.otoroshi.controllers.adminapi.AuthModulesController.updateEntityAction_auth-modules": "???",
    "operations.otoroshi.controllers.adminapi.CanaryController.resetServiceCanaryMembers_services": "???",
    "operations.otoroshi.controllers.adminapi.CanaryController.serviceCanaryMembers_services": "???",
    "operations.otoroshi.controllers.adminapi.CertificatesController.bulkCreateAction_certificates": "???",
    "operations.otoroshi.controllers.adminapi.CertificatesController.bulkDeleteAction_certificates": "???",
    "operations.otoroshi.controllers.adminapi.CertificatesController.bulkPatchAction_certificates": "???",
    "operations.otoroshi.controllers.adminapi.CertificatesController.bulkUpdateAction_certificates": "???",
    "operations.otoroshi.controllers.adminapi.CertificatesController.createAction_certificates": "???",
    "operations.otoroshi.controllers.adminapi.CertificatesController.deleteEntityAction_certificates": "???",
    "operations.otoroshi.controllers.adminapi.CertificatesController.findAllEntitiesAction_certificates": "???",
    "operations.otoroshi.controllers.adminapi.CertificatesController.findEntityByIdAction_certificates": "???",
    "operations.otoroshi.controllers.adminapi.CertificatesController.patchEntityAction_certificates": "???",
    "operations.otoroshi.controllers.adminapi.CertificatesController.renewCert_certificates": "???",
    "operations.otoroshi.controllers.adminapi.CertificatesController.updateEntityAction_certificates": "???",
    "operations.otoroshi.controllers.adminapi.ClusterController.clearClusterMembers_cluster": "???",
    "operations.otoroshi.controllers.adminapi.ClusterController.createLoginToken_cluster": "???",
    "operations.otoroshi.controllers.adminapi.ClusterController.createSession_cluster": "???",
    "operations.otoroshi.controllers.adminapi.ClusterController.getClusterMembers_cluster": "???",
    "operations.otoroshi.controllers.adminapi.ClusterController.getUserToken_cluster": "???",
    "operations.otoroshi.controllers.adminapi.ClusterController.internalState_cluster": "???",
    "operations.otoroshi.controllers.adminapi.ClusterController.isLoginTokenValid_cluster": "???",
    "operations.otoroshi.controllers.adminapi.ClusterController.isSessionValid_cluster": "???",
    "operations.otoroshi.controllers.adminapi.ClusterController.liveCluster_cluster": "???",
    "operations.otoroshi.controllers.adminapi.ClusterController.setUserToken_cluster": "???",
    "operations.otoroshi.controllers.adminapi.ClusterController.updateQuotas_cluster": "???",
    "operations.otoroshi.controllers.adminapi.DataExporterConfigController.bulkCreateAction_data-exporters": "???",
    "operations.otoroshi.controllers.adminapi.DataExporterConfigController.bulkDeleteAction_data-exporters": "???",
    "operations.otoroshi.controllers.adminapi.DataExporterConfigController.bulkPatchAction_data-exporters": "???",
    "operations.otoroshi.controllers.adminapi.DataExporterConfigController.bulkUpdateAction_data-exporters": "???",
    "operations.otoroshi.controllers.adminapi.DataExporterConfigController.createAction_data-exporters": "???",
    "operations.otoroshi.controllers.adminapi.DataExporterConfigController.deleteEntityAction_data-exporters": "???",
    "operations.otoroshi.controllers.adminapi.DataExporterConfigController.findAllEntitiesAction_data-exporters": "???",
    "operations.otoroshi.controllers.adminapi.DataExporterConfigController.findEntityByIdAction_data-exporters": "???",
    "operations.otoroshi.controllers.adminapi.DataExporterConfigController.patchEntityAction_data-exporters": "???",
    "operations.otoroshi.controllers.adminapi.DataExporterConfigController.updateEntityAction_data-exporters": "???",
    "operations.otoroshi.controllers.adminapi.EventsController.alertEvents_events": "???",
    "operations.otoroshi.controllers.adminapi.EventsController.auditEvents_events": "???",
    "operations.otoroshi.controllers.adminapi.GlobalConfigController.globalConfig_globalconfig": "???",
    "operations.otoroshi.controllers.adminapi.GlobalConfigController.patchGlobalConfig_globalconfig": "???",
    "operations.otoroshi.controllers.adminapi.GlobalConfigController.updateGlobalConfig_globalconfig": "???",
    "operations.otoroshi.controllers.adminapi.ImportExportController.fullExport_import-export": "???",
    "operations.otoroshi.controllers.adminapi.ImportExportController.fullImportFromFile_import-export": "???",
    "operations.otoroshi.controllers.adminapi.ImportExportController.fullImport_import-export": "???",
    "operations.otoroshi.controllers.adminapi.JwtVerifierController.bulkCreateAction_jwt-verifiers": "???",
    "operations.otoroshi.controllers.adminapi.JwtVerifierController.bulkDeleteAction_jwt-verifiers": "???",
    "operations.otoroshi.controllers.adminapi.JwtVerifierController.bulkPatchAction_jwt-verifiers": "???",
    "operations.otoroshi.controllers.adminapi.JwtVerifierController.bulkUpdateAction_jwt-verifiers": "???",
    "operations.otoroshi.controllers.adminapi.JwtVerifierController.createAction_jwt-verifiers": "???",
    "operations.otoroshi.controllers.adminapi.JwtVerifierController.deleteEntityAction_jwt-verifiers": "???",
    "operations.otoroshi.controllers.adminapi.JwtVerifierController.findAllEntitiesAction_jwt-verifiers": "???",
    "operations.otoroshi.controllers.adminapi.JwtVerifierController.findEntityByIdAction_jwt-verifiers": "???",
    "operations.otoroshi.controllers.adminapi.JwtVerifierController.patchEntityAction_jwt-verifiers": "???",
    "operations.otoroshi.controllers.adminapi.JwtVerifierController.updateEntityAction_jwt-verifiers": "???",
    "operations.otoroshi.controllers.adminapi.PkiController.certificateData_pki": "???",
    "operations.otoroshi.controllers.adminapi.PkiController.certificateIsValid_pki": "???",
    "operations.otoroshi.controllers.adminapi.PkiController.genCert_pki": "???",
    "operations.otoroshi.controllers.adminapi.PkiController.genCsr_pki": "???",
    "operations.otoroshi.controllers.adminapi.PkiController.genKeyPair_pki": "???",
    "operations.otoroshi.controllers.adminapi.PkiController.genLetsEncryptCert_pki": "???",
    "operations.otoroshi.controllers.adminapi.PkiController.genSelfSignedCA_pki": "???",
    "operations.otoroshi.controllers.adminapi.PkiController.genSelfSignedCert_pki": "???",
    "operations.otoroshi.controllers.adminapi.PkiController.genSubCA_pki": "???",
    "operations.otoroshi.controllers.adminapi.PkiController.importCertFromP12_pki": "???",
    "operations.otoroshi.controllers.adminapi.PkiController.signCert_pki": "???",
    "operations.otoroshi.controllers.adminapi.ScriptApiController.bulkCreateAction_scripts": "???",
    "operations.otoroshi.controllers.adminapi.ScriptApiController.bulkDeleteAction_scripts": "???",
    "operations.otoroshi.controllers.adminapi.ScriptApiController.bulkPatchAction_scripts": "???",
    "operations.otoroshi.controllers.adminapi.ScriptApiController.bulkUpdateAction_scripts": "???",
    "operations.otoroshi.controllers.adminapi.ScriptApiController.compileScript_scripts": "???",
    "operations.otoroshi.controllers.adminapi.ScriptApiController.createAction_scripts": "???",
    "operations.otoroshi.controllers.adminapi.ScriptApiController.deleteEntityAction_scripts": "???",
    "operations.otoroshi.controllers.adminapi.ScriptApiController.findAllEntitiesAction_scripts": "???",
    "operations.otoroshi.controllers.adminapi.ScriptApiController.findAllScriptsList_scripts": "???",
    "operations.otoroshi.controllers.adminapi.ScriptApiController.findEntityByIdAction_scripts": "???",
    "operations.otoroshi.controllers.adminapi.ScriptApiController.patchEntityAction_scripts": "???",
    "operations.otoroshi.controllers.adminapi.ScriptApiController.updateEntityAction_scripts": "???",
    "operations.otoroshi.controllers.adminapi.ServiceGroupController.bulkCreateAction_groups": "???",
    "operations.otoroshi.controllers.adminapi.ServiceGroupController.bulkDeleteAction_groups": "???",
    "operations.otoroshi.controllers.adminapi.ServiceGroupController.bulkPatchAction_groups": "???",
    "operations.otoroshi.controllers.adminapi.ServiceGroupController.bulkUpdateAction_groups": "???",
    "operations.otoroshi.controllers.adminapi.ServiceGroupController.createAction_groups": "???",
    "operations.otoroshi.controllers.adminapi.ServiceGroupController.deleteEntityAction_groups": "???",
    "operations.otoroshi.controllers.adminapi.ServiceGroupController.findAllEntitiesAction_groups": "???",
    "operations.otoroshi.controllers.adminapi.ServiceGroupController.findEntityByIdAction_groups": "???",
    "operations.otoroshi.controllers.adminapi.ServiceGroupController.patchEntityAction_groups": "???",
    "operations.otoroshi.controllers.adminapi.ServiceGroupController.serviceGroupServices_groups": "???",
    "operations.otoroshi.controllers.adminapi.ServiceGroupController.updateEntityAction_groups": "???",
    "operations.otoroshi.controllers.adminapi.ServicesController.allLines_lines": "???",
    "operations.otoroshi.controllers.adminapi.ServicesController.bulkCreateAction_services": "???",
    "operations.otoroshi.controllers.adminapi.ServicesController.bulkDeleteAction_services": "???",
    "operations.otoroshi.controllers.adminapi.ServicesController.bulkPatchAction_services": "???",
    "operations.otoroshi.controllers.adminapi.ServicesController.bulkUpdateAction_services": "???",
    "operations.otoroshi.controllers.adminapi.ServicesController.createAction_services": "???",
    "operations.otoroshi.controllers.adminapi.ServicesController.createServiceTemplate_services": "???",
    "operations.otoroshi.controllers.adminapi.ServicesController.deleteEntityAction_services": "???",
    "operations.otoroshi.controllers.adminapi.ServicesController.deleteServiceTemplate_services": "???",
    "operations.otoroshi.controllers.adminapi.ServicesController.findAllEntitiesAction_services": "???",
    "operations.otoroshi.controllers.adminapi.ServicesController.findEntityByIdAction_services": "???",
    "operations.otoroshi.controllers.adminapi.ServicesController.patchEntityAction_services": "???",
    "operations.otoroshi.controllers.adminapi.ServicesController.serviceAddTarget_services": "???",
    "operations.otoroshi.controllers.adminapi.ServicesController.serviceDeleteTarget_services": "???",
    "operations.otoroshi.controllers.adminapi.ServicesController.serviceHealth_services": "???",
    "operations.otoroshi.controllers.adminapi.ServicesController.serviceTargets_services": "???",
    "operations.otoroshi.controllers.adminapi.ServicesController.serviceTemplate_services": "???",
    "operations.otoroshi.controllers.adminapi.ServicesController.servicesForALine_lines": "???",
    "operations.otoroshi.controllers.adminapi.ServicesController.updateEntityAction_services": "???",
    "operations.otoroshi.controllers.adminapi.ServicesController.updateServiceTargets_services": "???",
    "operations.otoroshi.controllers.adminapi.ServicesController.updateServiceTemplate_services": "???",
    "operations.otoroshi.controllers.adminapi.SnowMonkeyController.getSnowMonkeyConfig_snowmonkey": "???",
    "operations.otoroshi.controllers.adminapi.SnowMonkeyController.getSnowMonkeyOutages_snowmonkey": "???",
    "operations.otoroshi.controllers.adminapi.SnowMonkeyController.patchSnowMonkey_snowmonkey": "???",
    "operations.otoroshi.controllers.adminapi.SnowMonkeyController.resetSnowMonkey_snowmonkey": "???",
    "operations.otoroshi.controllers.adminapi.SnowMonkeyController.startSnowMonkey_snowmonkey": "???",
    "operations.otoroshi.controllers.adminapi.SnowMonkeyController.stopSnowMonkey_snowmonkey": "???",
    "operations.otoroshi.controllers.adminapi.SnowMonkeyController.updateSnowMonkey_snowmonkey": "???",
    "operations.otoroshi.controllers.adminapi.StatsController.globalLiveStats_live": "???",
    "operations.otoroshi.controllers.adminapi.StatsController.hostMetrics_live": "???",
    "operations.otoroshi.controllers.adminapi.StatsController.serviceLiveStats_live": "???",
    "operations.otoroshi.controllers.adminapi.StatsController.serviceLiveStats_services": "???",
    "operations.otoroshi.controllers.adminapi.TcpServiceApiController.bulkCreateAction_tcp": "???",
    "operations.otoroshi.controllers.adminapi.TcpServiceApiController.bulkDeleteAction_tcp": "???",
    "operations.otoroshi.controllers.adminapi.TcpServiceApiController.bulkPatchAction_tcp": "???",
    "operations.otoroshi.controllers.adminapi.TcpServiceApiController.bulkUpdateAction_tcp": "???",
    "operations.otoroshi.controllers.adminapi.TcpServiceApiController.createAction_tcp": "???",
    "operations.otoroshi.controllers.adminapi.TcpServiceApiController.deleteEntityAction_tcp": "???",
    "operations.otoroshi.controllers.adminapi.TcpServiceApiController.findAllEntitiesAction_tcp": "???",
    "operations.otoroshi.controllers.adminapi.TcpServiceApiController.findEntityByIdAction_tcp": "???",
    "operations.otoroshi.controllers.adminapi.TcpServiceApiController.patchEntityAction_tcp": "???",
    "operations.otoroshi.controllers.adminapi.TcpServiceApiController.updateEntityAction_tcp": "???",
    "operations.otoroshi.controllers.adminapi.TeamsController.bulkCreateAction_teams": "???",
    "operations.otoroshi.controllers.adminapi.TeamsController.bulkDeleteAction_teams": "???",
    "operations.otoroshi.controllers.adminapi.TeamsController.bulkPatchAction_teams": "???",
    "operations.otoroshi.controllers.adminapi.TeamsController.bulkUpdateAction_teams": "???",
    "operations.otoroshi.controllers.adminapi.TeamsController.createAction_teams": "???",
    "operations.otoroshi.controllers.adminapi.TeamsController.deleteEntityAction_teams": "???",
    "operations.otoroshi.controllers.adminapi.TeamsController.findAllEntitiesAction_teams": "???",
    "operations.otoroshi.controllers.adminapi.TeamsController.findEntityByIdAction_teams": "???",
    "operations.otoroshi.controllers.adminapi.TeamsController.patchEntityAction_teams": "???",
    "operations.otoroshi.controllers.adminapi.TeamsController.updateEntityAction_teams": "???",
    "operations.otoroshi.controllers.adminapi.TemplatesController.createFromTemplate_admins": "???",
    "operations.otoroshi.controllers.adminapi.TemplatesController.createFromTemplate_tcp": "???",
    "operations.otoroshi.controllers.adminapi.TemplatesController.createFromTemplate_templates": "???",
    "operations.otoroshi.controllers.adminapi.TemplatesController.initiateApiKey_apikeys": "???",
    "operations.otoroshi.controllers.adminapi.TemplatesController.initiateApiKey_templates": "???",
    "operations.otoroshi.controllers.adminapi.TemplatesController.initiateAuthModule_auth-modules": "???",
    "operations.otoroshi.controllers.adminapi.TemplatesController.initiateCertificate_certificates": "???",
    "operations.otoroshi.controllers.adminapi.TemplatesController.initiateDataExporterConfig_data-exporters": "???",
    "operations.otoroshi.controllers.adminapi.TemplatesController.initiateGlobalConfig_globalconfig": "???",
    "operations.otoroshi.controllers.adminapi.TemplatesController.initiateJwtVerifier_jwt-verifiers": "???",
    "operations.otoroshi.controllers.adminapi.TemplatesController.initiateScript_scripts": "???",
    "operations.otoroshi.controllers.adminapi.TemplatesController.initiateServiceGroup_groups": "???",
    "operations.otoroshi.controllers.adminapi.TemplatesController.initiateServiceGroup_templates": "???",
    "operations.otoroshi.controllers.adminapi.TemplatesController.initiateService_services": "???",
    "operations.otoroshi.controllers.adminapi.TemplatesController.initiateService_templates": "???",
    "operations.otoroshi.controllers.adminapi.TemplatesController.initiateSimpleAdmin_admins": "???",
    "operations.otoroshi.controllers.adminapi.TemplatesController.initiateTcpService_tcp": "???",
    "operations.otoroshi.controllers.adminapi.TemplatesController.initiateTcpService_templates": "???",
    "operations.otoroshi.controllers.adminapi.TemplatesController.initiateTeam_teams": "???",
    "operations.otoroshi.controllers.adminapi.TemplatesController.initiateTenant_organizations": "???",
    "operations.otoroshi.controllers.adminapi.TemplatesController.initiateWebauthnAdmin_admins": "???",
    "operations.otoroshi.controllers.adminapi.TemplatesController.templateSpec_analytics": "???",
    "operations.otoroshi.controllers.adminapi.TenantsController.bulkCreateAction_organizations": "???",
    "operations.otoroshi.controllers.adminapi.TenantsController.bulkDeleteAction_organizations": "???",
    "operations.otoroshi.controllers.adminapi.TenantsController.bulkPatchAction_organizations": "???",
    "operations.otoroshi.controllers.adminapi.TenantsController.bulkUpdateAction_organizations": "???",
    "operations.otoroshi.controllers.adminapi.TenantsController.createAction_organizations": "???",
    "operations.otoroshi.controllers.adminapi.TenantsController.deleteEntityAction_organizations": "???",
    "operations.otoroshi.controllers.adminapi.TenantsController.findAllEntitiesAction_organizations": "???",
    "operations.otoroshi.controllers.adminapi.TenantsController.findEntityByIdAction_organizations": "???",
    "operations.otoroshi.controllers.adminapi.TenantsController.patchEntityAction_organizations": "???",
    "operations.otoroshi.controllers.adminapi.TenantsController.updateEntityAction_organizations": "???",
    "operations.otoroshi.controllers.adminapi.UsersController.deleteAdmin_admins": "???",
    "operations.otoroshi.controllers.adminapi.UsersController.discardAllPrivateAppsSessions_apps-sessions": "???",
    "operations.otoroshi.controllers.adminapi.UsersController.discardAllSessions_admin-sessions": "???",
    "operations.otoroshi.controllers.adminapi.UsersController.discardPrivateAppsSession_apps-sessions": "???",
    "operations.otoroshi.controllers.adminapi.UsersController.discardSession_admin-sessions": "???",
    "operations.otoroshi.controllers.adminapi.UsersController.privateAppsSessions_apps-sessions": "???",
    "operations.otoroshi.controllers.adminapi.UsersController.registerSimpleAdmin_admins": "???",
    "operations.otoroshi.controllers.adminapi.UsersController.registerWebAuthnAdmin_admins": "???",
    "operations.otoroshi.controllers.adminapi.UsersController.sessions_admin-sessions": "???",
    "operations.otoroshi.controllers.adminapi.UsersController.simpleAdmins_admins": "???",
    "operations.otoroshi.controllers.adminapi.UsersController.updateAdmin_admins": "???",
    "operations.otoroshi.controllers.adminapi.UsersController.updateWebAuthnAdmin_admins": "???",
    "operations.otoroshi.controllers.adminapi.UsersController.webAuthnAdmins_admins": "???",
    "operations.otoroshi.controllers.adminapi.UsersController.webAuthnDeleteAdmin_admins": "???",
    "otoroshi.auth.BasicAuthModuleConfig.basicAuth": "???",
    "otoroshi.auth.BasicAuthModuleConfig.desc": "???",
    "otoroshi.auth.BasicAuthModuleConfig.id": "???",
    "otoroshi.auth.BasicAuthModuleConfig.location": "???",
    "otoroshi.auth.BasicAuthModuleConfig.metadata": "???",
    "otoroshi.auth.BasicAuthModuleConfig.name": "???",
    "otoroshi.auth.BasicAuthModuleConfig.sessionCookieValues": "???",
    "otoroshi.auth.BasicAuthModuleConfig.sessionMaxAge": "???",
    "otoroshi.auth.BasicAuthModuleConfig.users": "???",
    "otoroshi.auth.BasicAuthModuleConfig.webauthn": "???",
    "otoroshi.auth.BasicAuthUser.email": "???",
    "otoroshi.auth.BasicAuthUser.metadata": "???",
    "otoroshi.auth.BasicAuthUser.name": "???",
    "otoroshi.auth.BasicAuthUser.password": "???",
    "otoroshi.auth.BasicAuthUser.rights": "???",
    "otoroshi.auth.BasicAuthUser.webauthn": "???",
    "otoroshi.auth.GenericOauth2ModuleConfig.accessTokenField": "Field name to get access token",
    "otoroshi.auth.GenericOauth2ModuleConfig.apiKeyMetaField": "???",
    "otoroshi.auth.GenericOauth2ModuleConfig.apiKeyTagsField": "???",
    "otoroshi.auth.GenericOauth2ModuleConfig.authorizeUrl": "OAuth authorize URL",
    "otoroshi.auth.GenericOauth2ModuleConfig.callbackUrl": "Otoroshi callback URL",
    "otoroshi.auth.GenericOauth2ModuleConfig.claims": "The claims of the token",
    "otoroshi.auth.GenericOauth2ModuleConfig.clientId": "OAuth Client id",
    "otoroshi.auth.GenericOauth2ModuleConfig.clientSecret": "OAuth Client secret",
    "otoroshi.auth.GenericOauth2ModuleConfig.dataOverride": "???",
    "otoroshi.auth.GenericOauth2ModuleConfig.desc": "Description of the config",
    "otoroshi.auth.GenericOauth2ModuleConfig.emailField": "Field name to get email from user profile",
    "otoroshi.auth.GenericOauth2ModuleConfig.extraMetadata": "???",
    "otoroshi.auth.GenericOauth2ModuleConfig.id": "Unique id of the config",
    "otoroshi.auth.GenericOauth2ModuleConfig.introspectionUrl": "???",
    "otoroshi.auth.GenericOauth2ModuleConfig.jwtVerifier": "Algo. settings to verify JWT token",
    "otoroshi.auth.GenericOauth2ModuleConfig.location": "???",
    "otoroshi.auth.GenericOauth2ModuleConfig.loginUrl": "OAuth login URL",
    "otoroshi.auth.GenericOauth2ModuleConfig.logoutUrl": "OAuth logout URL",
    "otoroshi.auth.GenericOauth2ModuleConfig.metadata": "???",
    "otoroshi.auth.GenericOauth2ModuleConfig.mtlsConfig": "???",
    "otoroshi.auth.GenericOauth2ModuleConfig.name": "Name of the config",
    "otoroshi.auth.GenericOauth2ModuleConfig.nameField": "Field name to get name from user profile",
    "otoroshi.auth.GenericOauth2ModuleConfig.oidConfig": "URL of the OIDC config. file",
    "otoroshi.auth.GenericOauth2ModuleConfig.otoroshiDataField": "Field name to get otoroshi metadata from. You can specify sub fields using | as separator",
    "otoroshi.auth.GenericOauth2ModuleConfig.proxy": "???",
    "otoroshi.auth.GenericOauth2ModuleConfig.readProfileFromToken": "The user profile will be read from the JWT token in id_token",
    "otoroshi.auth.GenericOauth2ModuleConfig.refreshTokens": "???",
    "otoroshi.auth.GenericOauth2ModuleConfig.rightsOverride": "???",
    "otoroshi.auth.GenericOauth2ModuleConfig.scope": "The scope of the token",
    "otoroshi.auth.GenericOauth2ModuleConfig.sessionCookieValues": "???",
    "otoroshi.auth.GenericOauth2ModuleConfig.sessionMaxAge": "Max age of the session",
    "otoroshi.auth.GenericOauth2ModuleConfig.superAdmins": "???",
    "otoroshi.auth.GenericOauth2ModuleConfig.tokenUrl": "OAuth token URL",
    "otoroshi.auth.GenericOauth2ModuleConfig.useCookie": "???",
    "otoroshi.auth.GenericOauth2ModuleConfig.useJson": "Use JSON or URL Form Encoded as payload with the OAuth provider",
    "otoroshi.auth.GenericOauth2ModuleConfig.userInfoUrl": "OAuth userinfo to get user profile",
    "otoroshi.auth.LdapAuthModuleConfig.adminPassword": "The admin password",
    "otoroshi.auth.LdapAuthModuleConfig.adminUsername": "The admin username",
    "otoroshi.auth.LdapAuthModuleConfig.allowEmptyPassword": "???",
    "otoroshi.auth.LdapAuthModuleConfig.basicAuth": "???",
    "otoroshi.auth.LdapAuthModuleConfig.dataOverride": "???",
    "otoroshi.auth.LdapAuthModuleConfig.desc": "Description of the config",
    "otoroshi.auth.LdapAuthModuleConfig.emailField": "Field name to get email from user profile",
    "otoroshi.auth.LdapAuthModuleConfig.extraMetadata": "???",
    "otoroshi.auth.LdapAuthModuleConfig.groupFilter": "Filter for groups",
    "otoroshi.auth.LdapAuthModuleConfig.id": "Unique id of the config",
    "otoroshi.auth.LdapAuthModuleConfig.location": "???",
    "otoroshi.auth.LdapAuthModuleConfig.metadata": "???",
    "otoroshi.auth.LdapAuthModuleConfig.metadataField": "???",
    "otoroshi.auth.LdapAuthModuleConfig.name": "Name of the config",
    "otoroshi.auth.LdapAuthModuleConfig.nameField": "Field name to get name from user profile",
    "otoroshi.auth.LdapAuthModuleConfig.rightsOverride": "???",
    "otoroshi.auth.LdapAuthModuleConfig.searchBase": "LDAP search base",
    "otoroshi.auth.LdapAuthModuleConfig.searchFilter": "Filter for users",
    "otoroshi.auth.LdapAuthModuleConfig.serverUrl": "URL of the ldap server",
    "otoroshi.auth.LdapAuthModuleConfig.sessionCookieValues": "???",
    "otoroshi.auth.LdapAuthModuleConfig.sessionMaxAge": "Max age of the session",
    "otoroshi.auth.LdapAuthModuleConfig.superAdmins": "???",
    "otoroshi.auth.LdapAuthModuleConfig.userBase": "LDAP user base DN",
    "otoroshi.auth.SessionCookieValues.httpOnly": "???",
    "otoroshi.auth.SessionCookieValues.secure": "???",
    "otoroshi.auth.WebAuthnDetails.credentials": "???",
    "otoroshi.auth.WebAuthnDetails.handle": "???",
    "otoroshi.events.KafkaConfig.keyPass": "Optional keypass",
    "otoroshi.events.KafkaConfig.keystore": "???",
    "otoroshi.events.KafkaConfig.mtlsConfig": "???",
    "otoroshi.events.KafkaConfig.sendEvents": "???",
    "otoroshi.events.KafkaConfig.servers": "URLs of the kafka servers",
    "otoroshi.events.KafkaConfig.topic": "Optional kafka topic (otoroshi-events by default)",
    "otoroshi.events.KafkaConfig.truststore": "???",
    "otoroshi.events.StatsdConfig.datadog": "Datadog agent",
    "otoroshi.events.StatsdConfig.host": "The host of the StatsD agent",
    "otoroshi.events.StatsdConfig.port": "The port of the StatsD agent",
    "otoroshi.models.ApiDescriptor.exposeApi": "???",
    "otoroshi.models.ApiDescriptor.openApiDescriptorUrl": "???",
    "otoroshi.models.ApiKey.allowClientIdOnly": "???",
    "otoroshi.models.ApiKey.authorizedEntities": "The group/service ids (prefixed by group_ or service_ on which the key is authorized",
    "otoroshi.models.ApiKey.clientId": "The unique id of the Api Key. Usually 16 random alpha numerical characters, but can be anything",
    "otoroshi.models.ApiKey.clientName": "The name of the api key, for humans ;-)",
    "otoroshi.models.ApiKey.clientSecret": "The secret of the Api Key. Usually 64 random alpha numerical characters, but can be anything",
    "otoroshi.models.ApiKey.constrainedServicesOnly": "???",
    "otoroshi.models.ApiKey.dailyQuota": "Authorized number of calls per day",
    "otoroshi.models.ApiKey.enabled": "Whether or not the key is enabled. If disabled, resources won't be available to calls using this key",
    "otoroshi.models.ApiKey.location": "???",
    "otoroshi.models.ApiKey.metadata": "Bunch of metadata for the key",
    "otoroshi.models.ApiKey.monthlyQuota": "Authorized number of calls per month",
    "otoroshi.models.ApiKey.readOnly": "???",
    "otoroshi.models.ApiKey.restrictions": "???",
    "otoroshi.models.ApiKey.rotation": "???",
    "otoroshi.models.ApiKey.tags": "???",
    "otoroshi.models.ApiKey.throttlingQuota": "Authorized number of calls per second, measured on 10 seconds",
    "otoroshi.models.ApiKey.validUntil": "???",
    "otoroshi.models.ApiKeyConstraints.basicAuth": "???",
    "otoroshi.models.ApiKeyConstraints.clientIdAuth": "???",
    "otoroshi.models.ApiKeyConstraints.customHeadersAuth": "???",
    "otoroshi.models.ApiKeyConstraints.jwtAuth": "???",
    "otoroshi.models.ApiKeyConstraints.routing": "???",
    "otoroshi.models.ApiKeyRotation.enabled": "???",
    "otoroshi.models.ApiKeyRotation.gracePeriod": "???",
    "otoroshi.models.ApiKeyRotation.nextSecret": "???",
    "otoroshi.models.ApiKeyRotation.rotationEvery": "???",
    "otoroshi.models.ApiKeyRouteMatcher.allMetaIn": "???",
    "otoroshi.models.ApiKeyRouteMatcher.allMetaKeysIn": "???",
    "otoroshi.models.ApiKeyRouteMatcher.allTagsIn": "???",
    "otoroshi.models.ApiKeyRouteMatcher.noneMetaIn": "???",
    "otoroshi.models.ApiKeyRouteMatcher.noneMetaKeysIn": "???",
    "otoroshi.models.ApiKeyRouteMatcher.noneTagIn": "???",
    "otoroshi.models.ApiKeyRouteMatcher.oneMetaIn": "???",
    "otoroshi.models.ApiKeyRouteMatcher.oneMetaKeyIn": "???",
    "otoroshi.models.ApiKeyRouteMatcher.oneTagIn": "???",
    "otoroshi.models.AutoCert.allowed": "???",
    "otoroshi.models.AutoCert.caRef": "???",
    "otoroshi.models.AutoCert.enabled": "???",
    "otoroshi.models.AutoCert.notAllowed": "???",
    "otoroshi.models.AutoCert.replyNicely": "???",
    "otoroshi.models.BackOfficeUser.authConfigId": "???",
    "otoroshi.models.BackOfficeUser.createdAt": "???",
    "otoroshi.models.BackOfficeUser.email": "???",
    "otoroshi.models.BackOfficeUser.expiredAt": "???",
    "otoroshi.models.BackOfficeUser.lastRefresh": "???",
    "otoroshi.models.BackOfficeUser.location": "???",
    "otoroshi.models.BackOfficeUser.metadata": "???",
    "otoroshi.models.BackOfficeUser.name": "???",
    "otoroshi.models.BackOfficeUser.profile": "???",
    "otoroshi.models.BackOfficeUser.randomId": "???",
    "otoroshi.models.BackOfficeUser.rights": "???",
    "otoroshi.models.BackOfficeUser.simpleLogin": "???",
    "otoroshi.models.BackOfficeUser.token": "???",
    "otoroshi.models.BadResponse.body": "The body of the HTTP response",
    "otoroshi.models.BadResponse.headers": "The HTTP headers of the response",
    "otoroshi.models.BadResponse.status": "The HTTP status for the response",
    "otoroshi.models.BadResponsesFaultConfig.ratio": "The percentage of requests affected by this fault. Value should be between 0.0 and 1.0",
    "otoroshi.models.BadResponsesFaultConfig.responses": "The possibles responses",
    "otoroshi.models.BasicAuthConstraints.enabled": "???",
    "otoroshi.models.BasicAuthConstraints.headerName": "???",
    "otoroshi.models.BasicAuthConstraints.queryName": "???",
    "otoroshi.models.Canary.enabled": "Use canary mode for this service",
    "otoroshi.models.Canary.root": "Otoroshi will append this root to any target choosen. If the specified root is '/api/foo', then a request to https://yyyyyyy/bar will actually hit https://xxxxxxxxx/api/foo/bar",
    "otoroshi.models.Canary.targets": "The list of target that Otoroshi will proxy and expose through the subdomain defined before. Otoroshi will do round-robin load balancing between all those targets with circuit breaker mecanism to avoid cascading failures",
    "otoroshi.models.Canary.traffic": "Ratio of traffic that will be sent to canary targets.",
    "otoroshi.models.ChaosConfig.badResponsesFaultConfig": "???",
    "otoroshi.models.ChaosConfig.enabled": "Whether or not this config is enabled",
    "otoroshi.models.ChaosConfig.largeRequestFaultConfig": "???",
    "otoroshi.models.ChaosConfig.largeResponseFaultConfig": "???",
    "otoroshi.models.ChaosConfig.latencyInjectionFaultConfig": "???",
    "otoroshi.models.CleverCloudSettings.consumerKey": "???",
    "otoroshi.models.CleverCloudSettings.consumerSecret": "???",
    "otoroshi.models.CleverCloudSettings.orgaId": "???",
    "otoroshi.models.CleverCloudSettings.secret": "???",
    "otoroshi.models.CleverCloudSettings.token": "???",
    "otoroshi.models.ClientConfig.backoffFactor": "Specify the factor to multiply the delay for each retry",
    "otoroshi.models.ClientConfig.callAndStreamTimeout": "???",
    "otoroshi.models.ClientConfig.callTimeout": "Specify how long each call should last at most in milliseconds",
    "otoroshi.models.ClientConfig.connectionTimeout": "???",
    "otoroshi.models.ClientConfig.customTimeouts": "???",
    "otoroshi.models.ClientConfig.globalTimeout": "Specify how long the global call (with retries) should last at most in milliseconds",
    "otoroshi.models.ClientConfig.idleTimeout": "???",
    "otoroshi.models.ClientConfig.maxErrors": "Specify how many errors can pass before opening the circuit breaker",
    "otoroshi.models.ClientConfig.proxy": "???",
    "otoroshi.models.ClientConfig.retries": "Specify how many times the client will try to fetch the result of the request after an error before giving up.",
    "otoroshi.models.ClientConfig.retryInitialDelay": "Specify the delay between two retries. Each retry, the delay is multiplied by the backoff factor",
    "otoroshi.models.ClientConfig.sampleInterval": "Specify the sliding window time for the circuit breaker in milliseconds, after this time, error count will be reseted",
    "otoroshi.models.ClientConfig.useCircuitBreaker": "Use a circuit breaker to avoid cascading failure when calling chains of services. Highly recommended !",
    "otoroshi.models.ClientIdAuthConstraints.enabled": "???",
    "otoroshi.models.ClientIdAuthConstraints.headerName": "???",
    "otoroshi.models.ClientIdAuthConstraints.queryName": "???",
    "otoroshi.models.CorsSettings.allowCredentials": "Allow to pass credentials",
    "otoroshi.models.CorsSettings.allowHeaders": "The cors allowed headers",
    "otoroshi.models.CorsSettings.allowMethods": "The cors allowed methods",
    "otoroshi.models.CorsSettings.allowOrigin": "The cors allowed origin",
    "otoroshi.models.CorsSettings.enabled": "Whether or not cors is enabled",
    "otoroshi.models.CorsSettings.excludedPatterns": "The cors excluded patterns",
    "otoroshi.models.CorsSettings.exposeHeaders": "The cors exposed header",
    "otoroshi.models.CorsSettings.maxAge": "Cors max age",
    "otoroshi.models.CustomHeadersAuthConstraints.clientIdHeaderName": "???",
    "otoroshi.models.CustomHeadersAuthConstraints.clientSecretHeaderName": "???",
    "otoroshi.models.CustomHeadersAuthConstraints.enabled": "???",
    "otoroshi.models.CustomTimeouts.callAndStreamTimeout": "???",
    "otoroshi.models.CustomTimeouts.callTimeout": "???",
    "otoroshi.models.CustomTimeouts.connectionTimeout": "???",
    "otoroshi.models.CustomTimeouts.globalTimeout": "???",
    "otoroshi.models.CustomTimeouts.idleTimeout": "???",
    "otoroshi.models.CustomTimeouts.path": "???",
    "otoroshi.models.DataExporterConfig.bufferSize": "buffer size",
    "otoroshi.models.DataExporterConfig.config": "Data Exporter config",
    "otoroshi.models.DataExporterConfig.desc": "Description",
    "otoroshi.models.DataExporterConfig.enabled": "Boolean",
    "otoroshi.models.DataExporterConfig.filtering": "filtering",
    "otoroshi.models.DataExporterConfig.groupDuration": "duration",
    "otoroshi.models.DataExporterConfig.groupSize": "Group size",
    "otoroshi.models.DataExporterConfig.id": "Id",
    "otoroshi.models.DataExporterConfig.jsonWorkers": "nb workers",
    "otoroshi.models.DataExporterConfig.location": "location",
    "otoroshi.models.DataExporterConfig.metadata": "Metadata",
    "otoroshi.models.DataExporterConfig.name": "Name",
    "otoroshi.models.DataExporterConfig.projection": "projection",
    "otoroshi.models.DataExporterConfig.sendWorkers": "send workers",
    "otoroshi.models.DataExporterConfig.typ": "Type of data exporter",
    "otoroshi.models.DataExporterConfigFiltering.exclude": "???",
    "otoroshi.models.DataExporterConfigFiltering.include": "???",
    "otoroshi.models.ElasticAnalyticsConfig.clusterUri": "???",
    "otoroshi.models.ElasticAnalyticsConfig.headers": "???",
    "otoroshi.models.ElasticAnalyticsConfig.index": "???",
    "otoroshi.models.ElasticAnalyticsConfig.mtlsConfig": "???",
    "otoroshi.models.ElasticAnalyticsConfig.password": "???",
    "otoroshi.models.ElasticAnalyticsConfig.type": "???",
    "otoroshi.models.ElasticAnalyticsConfig.user": "???",
    "otoroshi.models.EntityLocation.teams": "???",
    "otoroshi.models.EntityLocation.tenant": "???",
    "otoroshi.models.GlobalConfig.alertsEmails": "Email addresses that will receive all Otoroshi alert events",
    "otoroshi.models.GlobalConfig.alertsWebhooks": "Webhook that will receive all Otoroshi alert events",
    "otoroshi.models.GlobalConfig.analyticsWebhooks": "Webhook that will receive all internal Otoroshi events",
    "otoroshi.models.GlobalConfig.apiReadOnly": "If enabled, Admin API won't be able to write/update/delete entities",
    "otoroshi.models.GlobalConfig.autoCert": "???",
    "otoroshi.models.GlobalConfig.autoLinkToDefaultGroup": "If not defined, every new service descriptor will be added to the default group",
    "otoroshi.models.GlobalConfig.backOfficeAuthRef": "???",
    "otoroshi.models.GlobalConfig.cleverSettings": "Optional CleverCloud configuration",
    "otoroshi.models.GlobalConfig.elasticReadsConfig": "Config. for elastic reads",
    "otoroshi.models.GlobalConfig.elasticWritesConfigs": "Configs. for Elastic writes",
    "otoroshi.models.GlobalConfig.enableEmbeddedMetrics": "???",
    "otoroshi.models.GlobalConfig.endlessIpAddresses": "IP addresses for which any request to Otoroshi will respond with 128 Gb of zeros",
    "otoroshi.models.GlobalConfig.geolocationSettings": "???",
    "otoroshi.models.GlobalConfig.ipFiltering": "???",
    "otoroshi.models.GlobalConfig.kafkaConfig": "???",
    "otoroshi.models.GlobalConfig.letsEncryptSettings": "???",
    "otoroshi.models.GlobalConfig.limitConcurrentRequests": "If enabled, Otoroshi will reject new request if too much at the same time",
    "otoroshi.models.GlobalConfig.lines": "Possibles lines for Otoroshi",
    "otoroshi.models.GlobalConfig.logAnalyticsOnServer": "???",
    "otoroshi.models.GlobalConfig.mailerSettings": "Optional mailer configuration",
    "otoroshi.models.GlobalConfig.maintenanceMode": "???",
    "otoroshi.models.GlobalConfig.maxConcurrentRequests": "The number of authorized request processed at the same time",
    "otoroshi.models.GlobalConfig.maxHttp10ResponseSize": "The max size in bytes of an HTTP 1.0 response",
    "otoroshi.models.GlobalConfig.maxLogsSize": "Number of events kept locally",
    "otoroshi.models.GlobalConfig.maxWebhookSize": "???",
    "otoroshi.models.GlobalConfig.metadata": "???",
    "otoroshi.models.GlobalConfig.middleFingers": "Use middle finger emoji as a response character for endless HTTP responses",
    "otoroshi.models.GlobalConfig.otoroshiId": "???",
    "otoroshi.models.GlobalConfig.perIpThrottlingQuota": "Authorized number of calls per second globally per IP address, measured on 10 seconds",
    "otoroshi.models.GlobalConfig.plugins": "???",
    "otoroshi.models.GlobalConfig.proxies": "???",
    "otoroshi.models.GlobalConfig.scripts": "???",
    "otoroshi.models.GlobalConfig.snowMonkeyConfig": "???",
    "otoroshi.models.GlobalConfig.statsdConfig": "???",
    "otoroshi.models.GlobalConfig.streamEntityOnly": "HTTP will be streamed only. Doesn't work with old browsers",
    "otoroshi.models.GlobalConfig.throttlingQuota": "Authorized number of calls per second globally, measured on 10 seconds",
    "otoroshi.models.GlobalConfig.tlsSettings": "???",
    "otoroshi.models.GlobalConfig.u2fLoginOnly": "If enabled, login to backoffice through Auth0 will be disabled",
    "otoroshi.models.GlobalConfig.useAkkaHttpClient": "???",
    "otoroshi.models.GlobalConfig.useCircuitBreakers": "If enabled, services will be authorized to use circuit breakers",
    "otoroshi.models.GlobalConfig.userAgentSettings": "???",
    "otoroshi.models.GlobalJwtVerifier.algoSettings": "???",
    "otoroshi.models.GlobalJwtVerifier.desc": "Verifier description",
    "otoroshi.models.GlobalJwtVerifier.id": "Verifier id",
    "otoroshi.models.GlobalJwtVerifier.location": "???",
    "otoroshi.models.GlobalJwtVerifier.metadata": "???",
    "otoroshi.models.GlobalJwtVerifier.name": "Verifier name",
    "otoroshi.models.GlobalJwtVerifier.source": "???",
    "otoroshi.models.GlobalJwtVerifier.strategy": "???",
    "otoroshi.models.GlobalJwtVerifier.strict": "Does it fail if JWT not found",
    "otoroshi.models.GlobalScripts.enabled": "???",
    "otoroshi.models.GlobalScripts.jobConfig": "???",
    "otoroshi.models.GlobalScripts.jobRefs": "???",
    "otoroshi.models.GlobalScripts.preRouteConfig": "???",
    "otoroshi.models.GlobalScripts.preRouteRefs": "???",
    "otoroshi.models.GlobalScripts.sinkConfig": "???",
    "otoroshi.models.GlobalScripts.sinkRefs": "???",
    "otoroshi.models.GlobalScripts.transformersConfig": "???",
    "otoroshi.models.GlobalScripts.transformersRefs": "???",
    "otoroshi.models.GlobalScripts.validatorConfig": "???",
    "otoroshi.models.GlobalScripts.validatorRefs": "???",
    "otoroshi.models.HealthCheck.enabled": "Whether or not healthcheck is enabled on the current service descriptor",
    "otoroshi.models.HealthCheck.url": "The URL to check",
    "otoroshi.models.IpFiltering.blacklist": "Blacklisted IP addresses",
    "otoroshi.models.IpFiltering.whitelist": "Whitelisted IP addresses",
    "otoroshi.models.JwtAuthConstraints.cookieName": "???",
    "otoroshi.models.JwtAuthConstraints.enabled": "???",
    "otoroshi.models.JwtAuthConstraints.headerName": "???",
    "otoroshi.models.JwtAuthConstraints.includeRequestAttributes": "???",
    "otoroshi.models.JwtAuthConstraints.keyPairSigned": "???",
    "otoroshi.models.JwtAuthConstraints.maxJwtLifespanSecs": "???",
    "otoroshi.models.JwtAuthConstraints.queryName": "???",
    "otoroshi.models.JwtAuthConstraints.secretSigned": "???",
    "otoroshi.models.LargeRequestFaultConfig.additionalRequestSize": "The size added to the request body in bytes. Added payload will be spaces only.",
    "otoroshi.models.LargeRequestFaultConfig.ratio": "The percentage of requests affected by this fault. Value should be between 0.0 and 1.0",
    "otoroshi.models.LargeResponseFaultConfig.additionalResponseSize": "???",
    "otoroshi.models.LargeResponseFaultConfig.ratio": "The percentage of requests affected by this fault. Value should be between 0.0 and 1.0",
    "otoroshi.models.LatencyInjectionFaultConfig.from": "The start range of latency added to the request",
    "otoroshi.models.LatencyInjectionFaultConfig.ratio": "The percentage of requests affected by this fault. Value should be between 0.0 and 1.0",
    "otoroshi.models.LatencyInjectionFaultConfig.to": "The end range of latency added to the request",
    "otoroshi.models.PrivateAppsUser.authConfigId": "???",
    "otoroshi.models.PrivateAppsUser.createdAt": "???",
    "otoroshi.models.PrivateAppsUser.email": "???",
    "otoroshi.models.PrivateAppsUser.expiredAt": "???",
    "otoroshi.models.PrivateAppsUser.lastRefresh": "???",
    "otoroshi.models.PrivateAppsUser.location": "???",
    "otoroshi.models.PrivateAppsUser.metadata": "???",
    "otoroshi.models.PrivateAppsUser.name": "???",
    "otoroshi.models.PrivateAppsUser.otoroshiData": "???",
    "otoroshi.models.PrivateAppsUser.profile": "???",
    "otoroshi.models.PrivateAppsUser.randomId": "???",
    "otoroshi.models.PrivateAppsUser.realm": "???",
    "otoroshi.models.PrivateAppsUser.token": "???",
    "otoroshi.models.Proxies.alertEmails": "???",
    "otoroshi.models.Proxies.auth": "???",
    "otoroshi.models.Proxies.authority": "???",
    "otoroshi.models.Proxies.clevercloud": "???",
    "otoroshi.models.Proxies.elastic": "???",
    "otoroshi.models.Proxies.eventsWebhooks": "???",
    "otoroshi.models.Proxies.jwk": "???",
    "otoroshi.models.Proxies.services": "???",
    "otoroshi.models.RedirectionSettings.code": "The http redirect code",
    "otoroshi.models.RedirectionSettings.enabled": "Whether or not redirection is enabled",
    "otoroshi.models.RedirectionSettings.to": "The location for redirection",
    "otoroshi.models.RestrictionPath.method": "???",
    "otoroshi.models.RestrictionPath.path": "???",
    "otoroshi.models.Restrictions.allowLast": "???",
    "otoroshi.models.Restrictions.allowed": "???",
    "otoroshi.models.Restrictions.enabled": "???",
    "otoroshi.models.Restrictions.forbidden": "???",
    "otoroshi.models.Restrictions.notFound": "???",
    "otoroshi.models.SecComHeaders.claimRequestName": "???",
    "otoroshi.models.SecComHeaders.stateRequestName": "???",
    "otoroshi.models.SecComHeaders.stateResponseName": "???",
    "otoroshi.models.ServiceDescriptor.accessValidator": "???",
    "otoroshi.models.ServiceDescriptor.additionalHeaders": "Specify headers that will be added to each client request. Useful to add authentication",
    "otoroshi.models.ServiceDescriptor.additionalHeadersOut": "???",
    "otoroshi.models.ServiceDescriptor.allowHttp10": "???",
    "otoroshi.models.ServiceDescriptor.api": "???",
    "otoroshi.models.ServiceDescriptor.apiKeyConstraints": "???",
    "otoroshi.models.ServiceDescriptor.authConfigRef": "A reference to a global auth module config",
    "otoroshi.models.ServiceDescriptor.buildMode": "Display a construction page when a user try to use the service",
    "otoroshi.models.ServiceDescriptor.canary": "???",
    "otoroshi.models.ServiceDescriptor.chaosConfig": "???",
    "otoroshi.models.ServiceDescriptor.clientConfig": "???",
    "otoroshi.models.ServiceDescriptor.clientValidatorRef": "A reference to validation authority",
    "otoroshi.models.ServiceDescriptor.cors": "???",
    "otoroshi.models.ServiceDescriptor.detectApiKeySooner": "???",
    "otoroshi.models.ServiceDescriptor.domain": "The domain on which the service is available.",
    "otoroshi.models.ServiceDescriptor.enabled": "Activate or deactivate your service. Once disabled, users will get an error page saying the service does not exist",
    "otoroshi.models.ServiceDescriptor.enforceSecureCommunication": "When enabled, Otoroshi will try to exchange headers with downstream service to ensure no one else can use the service from outside",
    "otoroshi.models.ServiceDescriptor.env": "The line on which the service is available. Based on that value, the name of the line will be appended to the subdomain. For line prod, nothing will be appended. For example, if the subdomain is 'foo' and line is 'preprod', then the exposed service will be available at 'foo.preprod.mydomain'",
    "otoroshi.models.ServiceDescriptor.forceHttps": "Will force redirection to https:// if not present",
    "otoroshi.models.ServiceDescriptor.groups": "Each service descriptor is attached to groups. A group can have one or more services. Each API key is linked to a group and allow access to every service in the group",
    "otoroshi.models.ServiceDescriptor.gzip": "???",
    "otoroshi.models.ServiceDescriptor.headersVerification": "Specify headers that will be verified after routing.",
    "otoroshi.models.ServiceDescriptor.healthCheck": "???",
    "otoroshi.models.ServiceDescriptor.hosts": "???",
    "otoroshi.models.ServiceDescriptor.id": "A unique random string to identify your service",
    "otoroshi.models.ServiceDescriptor.ipFiltering": "???",
    "otoroshi.models.ServiceDescriptor.issueCert": "???",
    "otoroshi.models.ServiceDescriptor.issueCertCA": "???",
    "otoroshi.models.ServiceDescriptor.jwtVerifier": "???",
    "otoroshi.models.ServiceDescriptor.letsEncrypt": "???",
    "otoroshi.models.ServiceDescriptor.localHost": "The host used localy, mainly localhost:xxxx",
    "otoroshi.models.ServiceDescriptor.localScheme": "The scheme used localy, mainly http",
    "otoroshi.models.ServiceDescriptor.location": "???",
    "otoroshi.models.ServiceDescriptor.logAnalyticsOnServer": "???",
    "otoroshi.models.ServiceDescriptor.maintenanceMode": "Display a maintainance page when a user try to use the service",
    "otoroshi.models.ServiceDescriptor.matchingHeaders": "Specify headers that MUST be present on client request to route it. Useful to implement versioning",
    "otoroshi.models.ServiceDescriptor.matchingRoot": "The root path on which the service is available",
    "otoroshi.models.ServiceDescriptor.metadata": "Just a bunch of random properties",
    "otoroshi.models.ServiceDescriptor.missingOnlyHeadersIn": "???",
    "otoroshi.models.ServiceDescriptor.missingOnlyHeadersOut": "???",
    "otoroshi.models.ServiceDescriptor.name": "The name of your service. Only for debug and human readability purposes",
    "otoroshi.models.ServiceDescriptor.overrideHost": "Host header will be overriden with Host of the target",
    "otoroshi.models.ServiceDescriptor.paths": "???",
    "otoroshi.models.ServiceDescriptor.plugins": "???",
    "otoroshi.models.ServiceDescriptor.preRouting": "???",
    "otoroshi.models.ServiceDescriptor.privateApp": "When enabled, user will be allowed to use the service (UI) only if they are registered users of the private apps domain",
    "otoroshi.models.ServiceDescriptor.privatePatterns": "If you define a public pattern that is a little bit too much, you can make some of public URL private again",
    "otoroshi.models.ServiceDescriptor.publicPatterns": "By default, every services are private only and you'll need an API key to access it. However, if you want to expose a public UI, you can define one or more public patterns (regex) to allow access to anybody. For example if you want to allow anybody on any URL, just use '/.*'",
    "otoroshi.models.ServiceDescriptor.readOnly": "???",
    "otoroshi.models.ServiceDescriptor.redirectToLocal": "If you work locally with Otoroshi, you may want to use that feature to redirect one particuliar service to a local host. For example, you can relocate https://foo.preprod.bar.com to http://localhost:8080 to make some tests",
    "otoroshi.models.ServiceDescriptor.redirection": "???",
    "otoroshi.models.ServiceDescriptor.removeHeadersIn": "???",
    "otoroshi.models.ServiceDescriptor.removeHeadersOut": "???",
    "otoroshi.models.ServiceDescriptor.restrictions": "???",
    "otoroshi.models.ServiceDescriptor.root": "Otoroshi will append this root to any target choosen. If the specified root is '/api/foo', then a request to https://yyyyyyy/bar will actually hit https://xxxxxxxxx/api/foo/bar",
    "otoroshi.models.ServiceDescriptor.secComAlgoChallengeBackToOto": "???",
    "otoroshi.models.ServiceDescriptor.secComAlgoChallengeOtoToBack": "???",
    "otoroshi.models.ServiceDescriptor.secComAlgoInfoToken": "???",
    "otoroshi.models.ServiceDescriptor.secComExcludedPatterns": "URI patterns excluded from secured communications",
    "otoroshi.models.ServiceDescriptor.secComHeaders": "???",
    "otoroshi.models.ServiceDescriptor.secComInfoTokenVersion": "???",
    "otoroshi.models.ServiceDescriptor.secComSettings": "???",
    "otoroshi.models.ServiceDescriptor.secComTtl": "???",
    "otoroshi.models.ServiceDescriptor.secComUseSameAlgo": "???",
    "otoroshi.models.ServiceDescriptor.secComVersion": "???",
    "otoroshi.models.ServiceDescriptor.securityExcludedPatterns": "???",
    "otoroshi.models.ServiceDescriptor.sendInfoToken": "???",
    "otoroshi.models.ServiceDescriptor.sendOtoroshiHeadersBack": "When enabled, Otoroshi will send headers to consumer like request id, client latency, overhead, etc ...",
    "otoroshi.models.ServiceDescriptor.sendStateChallenge": "???",
    "otoroshi.models.ServiceDescriptor.strictlyPrivate": "???",
    "otoroshi.models.ServiceDescriptor.stripPath": "???",
    "otoroshi.models.ServiceDescriptor.subdomain": "The subdomain on which the service is available",
    "otoroshi.models.ServiceDescriptor.targets": "The list of target that Otoroshi will proxy and expose through the subdomain defined before. Otoroshi will do round-robin load balancing between all those targets with circuit breaker mecanism to avoid cascading failures",
    "otoroshi.models.ServiceDescriptor.targetsLoadBalancing": "???",
    "otoroshi.models.ServiceDescriptor.tcpUdpTunneling": "???",
    "otoroshi.models.ServiceDescriptor.transformerConfig": "???",
    "otoroshi.models.ServiceDescriptor.transformerRefs": "???",
    "otoroshi.models.ServiceDescriptor.useAkkaHttpClient": "???",
    "otoroshi.models.ServiceDescriptor.useNewWSClient": "???",
    "otoroshi.models.ServiceDescriptor.userFacing": "The fact that this service will be seen by users and cannot be impacted by the Snow Monkey",
    "otoroshi.models.ServiceDescriptor.xForwardedHeaders": "Send X-Forwarded-* headers",
    "otoroshi.models.ServiceGroup.description": "???",
    "otoroshi.models.ServiceGroup.id": "A unique random string to identify your service",
    "otoroshi.models.ServiceGroup.location": "???",
    "otoroshi.models.ServiceGroup.metadata": "Just a bunch of random properties",
    "otoroshi.models.ServiceGroup.name": "The name of your service. Only for debug and human readability purposes",
    "otoroshi.models.SimpleOtoroshiAdmin.createdAt": "???",
    "otoroshi.models.SimpleOtoroshiAdmin.label": "???",
    "otoroshi.models.SimpleOtoroshiAdmin.location": "???",
    "otoroshi.models.SimpleOtoroshiAdmin.metadata": "???",
    "otoroshi.models.SimpleOtoroshiAdmin.password": "???",
    "otoroshi.models.SimpleOtoroshiAdmin.rights": "???",
    "otoroshi.models.SimpleOtoroshiAdmin.typ": "???",
    "otoroshi.models.SimpleOtoroshiAdmin.username": "???",
    "otoroshi.models.SnowMonkeyConfig.chaosConfig": "???",
    "otoroshi.models.SnowMonkeyConfig.dryRun": "Whether or not outages will actualy impact requests",
    "otoroshi.models.SnowMonkeyConfig.enabled": "Whether or not this config is enabled",
    "otoroshi.models.SnowMonkeyConfig.includeUserFacingDescriptors": "Whether or not user facing apps. will be impacted by Snow Monkey",
    "otoroshi.models.SnowMonkeyConfig.outageDurationFrom": "Start of outage duration range",
    "otoroshi.models.SnowMonkeyConfig.outageDurationTo": "End of outage duration range",
    "otoroshi.models.SnowMonkeyConfig.outageStrategy": "",
    "otoroshi.models.SnowMonkeyConfig.startTime": "Start time of Snow Monkey each day",
    "otoroshi.models.SnowMonkeyConfig.stopTime": "Stop time of Snow Monkey each day",
    "otoroshi.models.SnowMonkeyConfig.targetGroups": "Groups impacted by Snow Monkey. If empty, all groups will be impacted",
    "otoroshi.models.SnowMonkeyConfig.timesPerDay": "Number of time per day each service will be outage",
    "otoroshi.models.Target.host": "The host on which the HTTP call will be forwarded. Can be a domain name, or an IP address. Can also have a port",
    "otoroshi.models.Target.ipAddress": "???",
    "otoroshi.models.Target.mtlsConfig": "???",
    "otoroshi.models.Target.predicate": "???",
    "otoroshi.models.Target.protocol": "???",
    "otoroshi.models.Target.scheme": "The protocol used for communication. Can be http or https",
    "otoroshi.models.Target.weight": "???",
    "otoroshi.models.Team.description": "???",
    "otoroshi.models.Team.id": "???",
    "otoroshi.models.Team.metadata": "???",
    "otoroshi.models.Team.name": "???",
    "otoroshi.models.Team.tenant": "???",
    "otoroshi.models.TeamAccess.canRead": "???",
    "otoroshi.models.TeamAccess.canWrite": "???",
    "otoroshi.models.TeamAccess.value": "???",
    "otoroshi.models.TeamId.rawValue": "???",
    "otoroshi.models.Tenant.description": "???",
    "otoroshi.models.Tenant.id": "???",
    "otoroshi.models.Tenant.metadata": "???",
    "otoroshi.models.Tenant.name": "???",
    "otoroshi.models.TenantAccess.canRead": "???",
    "otoroshi.models.TenantAccess.canWrite": "???",
    "otoroshi.models.TenantAccess.value": "???",
    "otoroshi.models.TenantId.rawValue": "???",
    "otoroshi.models.TlsSettings.defaultDomain": "???",
    "otoroshi.models.TlsSettings.randomIfNotFound": "???",
    "otoroshi.models.UserAgentSettings.enabled": "???",
    "otoroshi.models.UserRight.teams": "???",
    "otoroshi.models.UserRight.tenant": "???",
    "otoroshi.models.UserRights.rights": "???",
    "otoroshi.models.WebAuthnOtoroshiAdmin.createdAt": "???",
    "otoroshi.models.WebAuthnOtoroshiAdmin.credentials": "???",
    "otoroshi.models.WebAuthnOtoroshiAdmin.handle": "???",
    "otoroshi.models.WebAuthnOtoroshiAdmin.label": "???",
    "otoroshi.models.WebAuthnOtoroshiAdmin.location": "???",
    "otoroshi.models.WebAuthnOtoroshiAdmin.metadata": "???",
    "otoroshi.models.WebAuthnOtoroshiAdmin.password": "???",
    "otoroshi.models.WebAuthnOtoroshiAdmin.rights": "???",
    "otoroshi.models.WebAuthnOtoroshiAdmin.typ": "???",
    "otoroshi.models.WebAuthnOtoroshiAdmin.username": "???",
    "otoroshi.models.Webhook.headers": "Headers to authorize the call or whatever",
    "otoroshi.models.Webhook.mtlsConfig": "???",
    "otoroshi.models.Webhook.url": "The URL where events are posted",
    "otoroshi.script.AccessValidatorRef.config": "???",
    "otoroshi.script.AccessValidatorRef.enabled": "???",
    "otoroshi.script.AccessValidatorRef.excludedPatterns": "???",
    "otoroshi.script.AccessValidatorRef.refs": "???",
    "otoroshi.script.PreRoutingRef.config": "???",
    "otoroshi.script.PreRoutingRef.enabled": "???",
    "otoroshi.script.PreRoutingRef.excludedPatterns": "???",
    "otoroshi.script.PreRoutingRef.refs": "???",
    "otoroshi.script.Script.code": "The code of the script",
    "otoroshi.script.Script.desc": "The description of the script",
    "otoroshi.script.Script.id": "The id of the script",
    "otoroshi.script.Script.location": "???",
    "otoroshi.script.Script.metadata": "???",
    "otoroshi.script.Script.name": "The name of the script",
    "otoroshi.script.Script.type": "???",
    "otoroshi.script.plugins.Plugins.config": "???",
    "otoroshi.script.plugins.Plugins.enabled": "???",
    "otoroshi.script.plugins.Plugins.excluded": "???",
    "otoroshi.script.plugins.Plugins.name": "???",
    "otoroshi.script.plugins.Plugins.refs": "???",
    "otoroshi.ssl.Cert.autoRenew": "???",
    "otoroshi.ssl.Cert.ca": "???",
    "otoroshi.ssl.Cert.caRef": "???",
    "otoroshi.ssl.Cert.chain": "???",
    "otoroshi.ssl.Cert.client": "???",
    "otoroshi.ssl.Cert.description": "???",
    "otoroshi.ssl.Cert.domain": "???",
    "otoroshi.ssl.Cert.entityMetadata": "???",
    "otoroshi.ssl.Cert.exposed": "???",
    "otoroshi.ssl.Cert.from": "???",
    "otoroshi.ssl.Cert.id": "???",
    "otoroshi.ssl.Cert.keypair": "???",
    "otoroshi.ssl.Cert.letsEncrypt": "???",
    "otoroshi.ssl.Cert.location": "???",
    "otoroshi.ssl.Cert.name": "???",
    "otoroshi.ssl.Cert.password": "???",
    "otoroshi.ssl.Cert.privateKey": "???",
    "otoroshi.ssl.Cert.revoked": "???",
    "otoroshi.ssl.Cert.sans": "???",
    "otoroshi.ssl.Cert.selfSigned": "???",
    "otoroshi.ssl.Cert.subject": "???",
    "otoroshi.ssl.Cert.to": "???",
    "otoroshi.ssl.Cert.valid": "???",
    "otoroshi.tcp.SniSettings.enabled": "???",
    "otoroshi.tcp.SniSettings.forwardIfNoMatch": "???",
    "otoroshi.tcp.SniSettings.forwardsTo": "???",
    "otoroshi.tcp.TcpRule.domain": "???",
    "otoroshi.tcp.TcpRule.targets": "???",
    "otoroshi.tcp.TcpService.clientAuth": "???",
    "otoroshi.tcp.TcpService.enabled": "???",
    "otoroshi.tcp.TcpService.id": "???",
    "otoroshi.tcp.TcpService.interface": "???",
    "otoroshi.tcp.TcpService.location": "???",
    "otoroshi.tcp.TcpService.metadata": "???",
    "otoroshi.tcp.TcpService.name": "???",
    "otoroshi.tcp.TcpService.port": "???",
    "otoroshi.tcp.TcpService.rules": "???",
    "otoroshi.tcp.TcpService.sni": "???",
    "otoroshi.tcp.TcpService.tls": "???",
    "otoroshi.tcp.TcpTarget.host": "???",
    "otoroshi.tcp.TcpTarget.ip": "???",
    "otoroshi.tcp.TcpTarget.port": "???",
    "otoroshi.tcp.TcpTarget.tls": "???",
    "otoroshi.utils.gzip.GzipConfig.blackList": "???",
    "otoroshi.utils.gzip.GzipConfig.bufferSize": "???",
    "otoroshi.utils.gzip.GzipConfig.chunkedThreshold": "???",
    "otoroshi.utils.gzip.GzipConfig.compressionLevel": "???",
    "otoroshi.utils.gzip.GzipConfig.enabled": "???",
    "otoroshi.utils.gzip.GzipConfig.excludedPatterns": "???",
    "otoroshi.utils.gzip.GzipConfig.whiteList": "???",
    "otoroshi.utils.http.MtlsConfig.certs": "???",
    "otoroshi.utils.http.MtlsConfig.loose": "???",
    "otoroshi.utils.http.MtlsConfig.mtls": "???",
    "otoroshi.utils.http.MtlsConfig.trustAll": "???",
    "otoroshi.utils.http.MtlsConfig.trustedCerts": "???",
    "otoroshi.utils.letsencrypt.LetsEncryptSettings.contacts": "???",
    "otoroshi.utils.letsencrypt.LetsEncryptSettings.emails": "???",
    "otoroshi.utils.letsencrypt.LetsEncryptSettings.enabled": "???",
    "otoroshi.utils.letsencrypt.LetsEncryptSettings.privateKey": "???",
    "otoroshi.utils.letsencrypt.LetsEncryptSettings.publicKey": "???",
    "otoroshi.utils.letsencrypt.LetsEncryptSettings.server": "???",
    "tags.admin-sessions": "???",
    "tags.admins": "???",
    "tags.analytics": "???",
    "tags.apikeys": "???",
    "tags.apps-sessions": "???",
    "tags.auth-modules": "???",
    "tags.certificates": "???",
    "tags.cluster": "???",
    "tags.data-exporters": "???",
    "tags.events": "???",
    "tags.globalconfig": "???",
    "tags.groups": "???",
    "tags.import-export": "???",
    "tags.jwt-verifiers": "???",
    "tags.lines": "???",
    "tags.live": "???",
    "tags.organizations": "???",
    "tags.pki": "???",
    "tags.privateapps": "???",
    "tags.scripts": "???",
    "tags.services": "???",
    "tags.snowmonkey": "???",
    "tags.tcp": "???",
    "tags.teams": "???",
    "tags.templates": "???"
   },
   "old_descriptions": {

   }
}