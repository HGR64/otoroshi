{"id":"../node_modules/byte-converter/lib/byte-converter.js","dependencies":[{"name":"/Users/79966b/Documents/opensource/otoroshi/otoroshi/javascript/package.json","includedInParent":true,"mtime":1617883166854},{"name":"/Users/79966b/Documents/opensource/otoroshi/otoroshi/javascript/node_modules/byte-converter/package.json","includedInParent":true,"mtime":1617883915035},{"name":"./unit-description","loc":{"line":1,"column":26},"parent":"/Users/79966b/Documents/opensource/otoroshi/otoroshi/javascript/node_modules/byte-converter/lib/byte-converter.js","resolved":"/Users/79966b/Documents/opensource/otoroshi/otoroshi/javascript/node_modules/byte-converter/lib/unit-description.js"}],"generated":{"js":"var description = require('./unit-description');\r\n\r\nfunction converter(value, originalUnit, targetUnit) {\r\n    if (_isEmpty(originalUnit) || _isEmpty(targetUnit)) {\r\n        throw new Error('Unit must be set.');\r\n    }\r\n    var power = description[originalUnit].power10 - description[targetUnit].power10;\r\n    var result = value * Math.pow(10, power);\r\n    return result;\r\n}\r\n\r\nfunction convertBase2(value, originalUnit, targetUnit) {\r\n    if (_isEmpty(originalUnit) || _isEmpty(targetUnit)) {\r\n        throw new Error('Unit must be set.');\r\n    }\r\n    var power = description[originalUnit].power2 - description[targetUnit].power2;\r\n    var result = value * Math.pow(2, power);\r\n    return result;\r\n}\r\n\r\nfunction getSmallestUnit(units) {\r\n    var arrUnits = Array.prototype.slice.call(arguments, 0)\r\n    var smallestUnit = {\r\n        power : null,\r\n        name : null\r\n    };\r\n\r\n    for (var i = 0; i < arrUnits.length; i++) {\r\n        var currentUnit = arrUnits[i];\r\n        var currentPower = description[currentUnit].power10;\r\n        if(!smallestUnit.name){\r\n            smallestUnit.name = currentUnit;\r\n            smallestUnit.power = currentPower;\r\n        }else{\r\n            if(smallestUnit.power > description[currentUnit].power10){\r\n                smallestUnit.name = currentUnit;\r\n                smallestUnit.power = currentPower;\r\n            }\r\n        }\r\n    }\r\n    return smallestUnit.name;\r\n}\r\n\r\nfunction _isEmpty(s) {\r\n    if (s === undefined || s.length == 0) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nvar interface = {\r\n    converterBase10: converter,\r\n    converterBase2: convertBase2,\r\n    getSmallestUnit: getSmallestUnit\r\n};\r\n\r\nmodule.exports = interface;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/byte-converter/lib/byte-converter.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}}],"sources":{"../node_modules/byte-converter/lib/byte-converter.js":"var description = require('./unit-description');\r\n\r\nfunction converter(value, originalUnit, targetUnit) {\r\n    if (_isEmpty(originalUnit) || _isEmpty(targetUnit)) {\r\n        throw new Error('Unit must be set.');\r\n    }\r\n    var power = description[originalUnit].power10 - description[targetUnit].power10;\r\n    var result = value * Math.pow(10, power);\r\n    return result;\r\n}\r\n\r\nfunction convertBase2(value, originalUnit, targetUnit) {\r\n    if (_isEmpty(originalUnit) || _isEmpty(targetUnit)) {\r\n        throw new Error('Unit must be set.');\r\n    }\r\n    var power = description[originalUnit].power2 - description[targetUnit].power2;\r\n    var result = value * Math.pow(2, power);\r\n    return result;\r\n}\r\n\r\nfunction getSmallestUnit(units) {\r\n    var arrUnits = Array.prototype.slice.call(arguments, 0)\r\n    var smallestUnit = {\r\n        power : null,\r\n        name : null\r\n    };\r\n\r\n    for (var i = 0; i < arrUnits.length; i++) {\r\n        var currentUnit = arrUnits[i];\r\n        var currentPower = description[currentUnit].power10;\r\n        if(!smallestUnit.name){\r\n            smallestUnit.name = currentUnit;\r\n            smallestUnit.power = currentPower;\r\n        }else{\r\n            if(smallestUnit.power > description[currentUnit].power10){\r\n                smallestUnit.name = currentUnit;\r\n                smallestUnit.power = currentPower;\r\n            }\r\n        }\r\n    }\r\n    return smallestUnit.name;\r\n}\r\n\r\nfunction _isEmpty(s) {\r\n    if (s === undefined || s.length == 0) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nvar interface = {\r\n    converterBase10: converter,\r\n    converterBase2: convertBase2,\r\n    getSmallestUnit: getSmallestUnit\r\n};\r\n\r\nmodule.exports = interface;"},"lineCount":56}},"error":null,"hash":"16bfd656ea82f2690183ab6cbcdd90c0","cacheData":{"env":{}}}